name: Spring boot CI/CD with AWS EC2, ECR

on:
  push:
    branches:
      - dev

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [ common, eureka, gateway, user, performance, order, payment, ticket ]

    steps:
      - name: Checkout
        # Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew and build with it
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test
        working-directory: ${{ matrix.service }}

  Docker:
    name: Build docker image and Push to registry
    needs: build  # build_services 중 하나로 변경
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker Hub Log in
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name : Docker Image Build
        run: docker compose -f ./docker-compose.yaml build --no-cache

      - name: Tag Docker images
        run: |
          docker tag dmitry5156/astraphe-gateway:latest dmitry5156/astraphe-gateway:${{ github.sha }}
          docker tag dmitry5156/astraphe-order:latest dmitry5156/astraphe-order:${{ github.sha }}
          docker tag dmitry5156/astraphe-payment:latest dmitry5156/astraphe-payment:${{ github.sha }}
          docker tag dmitry5156/astraphe-performance:latest dmitry5156/astraphe-performance:${{ github.sha }}
          docker tag dmitry5156/astraphe-eureka:latest dmitry5156/astraphe-eureka:${{ github.sha }}
          docker tag dmitry5156/astraphe-ticket:latest dmitry5156/astraphe-ticket:${{ github.sha }}
          docker tag dmitry5156/astraphe-user:latest dmitry5156/astraphe-user:${{ github.sha }}

      - name: Push Docker images
        run: |
          docker push dmitry5156/astraphe-gateway:${{ github.sha }}
          docker push dmitry5156/astraphe-order:${{ github.sha }}
          docker push dmitry5156/astraphe-payment:${{ github.sha }}
          docker push dmitry5156/astraphe-performance:${{ github.sha }}
          docker push dmitry5156/astraphe-eureka:${{ github.sha }}
          docker push dmitry5156/astraphe-ticket:${{ github.sha }}
          docker push dmitry5156/astraphe-user:${{ github.sha }}

      - name: Push Docker image to Docker Hub
        run: |
          docker tag dmitry5156/astraphe-gateway:${{ github.sha }} dmitry5156/astraphe-gateway:latest
          docker tag dmitry5156/astraphe-order:${{ github.sha }} dmitry5156/astraphe-order:latest
          docker tag dmitry5156/astraphe-payment:${{ github.sha }} dmitry5156/astraphe-payment:latest
          docker tag dmitry5156/astraphe-performance:${{ github.sha }} dmitry5156/astraphe-performance:latest
          docker tag dmitry5156/astraphe-eureka:${{ github.sha }} dmitry5156/astraphe-eureka:latest
          docker tag dmitry5156/astraphe-ticket:${{ github.sha }} dmitry5156/astraphe-ticket:latest
          docker tag dmitry5156/astraphe-user:${{ github.sha }} dmitry5156/astraphe-user:latest
          docker push dmitry5156/astraphe-gateway:latest
          docker push dmitry5156/astraphe-order:latest
          docker push dmitry5156/astraphe-payment:latest
          docker push dmitry5156/astraphe-performance:latest
          docker push dmitry5156/astraphe-eureka:latest
          docker push dmitry5156/astraphe-ticket:latest   
          docker push dmitry5156/astraphe-user:latest   

  Deploy:
    name: Deploy
    needs: Docker
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # docker compose로 container를 실행하기 위해 docker-compose.yml 을 EC2로 복사합니다.
      - name: Copy Docker compose file to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          source: "docker-compose.yml"
          target: "/home/ubuntu" # target 은 디렉토리임. target directory 아래에 같은 이름의 파일로 옮겨진다.

      # ssh를 통해 EC2에 접속하고 docker container를 재시작합니다.
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          port: 22
          envs: AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_REGION, ECR_REGISTRY, ECR_NAMESPACE
          script: |
            echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
            cd /home/ubuntu/Astraphe/server
            docker compose -f ./docker-compose.yaml down
            docker pull dmitry5156/astraphe-gateway:latest
            docker pull dmitry5156/astraphe-order:latest
            docker pull dmitry5156/astraphe-payment:latest
            docker pull dmitry5156/astraphe-performance:latest
            docker pull dmitry5156/astraphe-eureka:latest
            docker pull dmitry5156/astraphe-ticket:latest
            docker pull dmitry5156/astraphe-user:latest
            docker compose -f ./docker-compose.yaml up -d
