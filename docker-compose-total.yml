# docker-compose-service.yml
services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    platform: linux/amd64
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: wurstmeister/kafka:latest
    platform: linux/amd64
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    platform: linux/amd64
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_READONLY: "false"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.2
    container_name: elasticsearch
    restart: always
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  eureka:
    ports:
      - "19090:19090"
    build:
      dockerfile: Dockerfile
      args:
        - FILE_DIRECTORY=./eureka
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    image: ${ECR_REGISTRY}/${ECR_NAMESPACE}/server

  gateway:
    ports:
      - "19091:19091"
    build:
      dockerfile: Dockerfile
      args:
        - FILE_DIRECTORY=./gateway
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    image: ${ECR_REGISTRY}/${ECR_NAMESPACE}/gateway
    depends_on:
      - eureka

  user:
    ports:
      - "19097:19097"
    build:
      dockerfile: Dockerfile
      args:
        - FILE_DIRECTORY=./user
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    image: ${ECR_REGISTRY}/${ECR_NAMESPACE}/user
    depends_on:
      - eureka

  order:
    ports:
      - "19095:19095"
    build:
      dockerfile: Dockerfile
      args:
        - FILE_DIRECTORY=./order
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    image: ${ECR_REGISTRY}/${ECR_NAMESPACE}/order
    depends_on:
      - eureka
      - kafka-ui
      - kafka
      - zookeeper

  performance:
    ports:
      - "19093:19093"
    build:
      dockerfile: Dockerfile
      args:
        - FILE_DIRECTORY=./performance
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    image: ${ECR_REGISTRY}/${ECR_NAMESPACE}/performance
    depends_on:
      - eureka
      - kafka-ui
      - kafka
      - zookeeper
      - elasticsearch

  ticket:
    ports:
      - "19094:19094"
    build:
      dockerfile: Dockerfile
      args:
        - FILE_DIRECTORY=./ticket
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    image: ${ECR_REGISTRY}/${ECR_NAMESPACE}/ticket
    depends_on:
      - eureka
      - kafka-ui
      - kafka
      - zookeeper


  payment:
    ports:
      - "19096:19096"
    build:
      dockerfile: Dockerfile
      args:
        - FILE_DIRECTORY=./payment
    image: ${ECR_REGISTRY}/${ECR_NAMESPACE}/payment
    depends_on:
      - eureka
      - kafka-ui
      - kafka
      - zookeeper


  queue:
    ports:
      - "19099:19099"
    build:
      dockerfile: Dockerfile
      args:
        - FILE_DIRECTORY=./payment
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    image: ${ECR_REGISTRY}/${ECR_NAMESPACE}/queue
    depends_on:
      - eureka

